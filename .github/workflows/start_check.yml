name: Repository Dispatch
on:
  repository_dispatch:
    types: [start-check]
jobs:

  get-pr-sha:
    runs-on: ubuntu-latest
    permissions:
      checks: write   # Permission to create a Check Run
      contents: write # Permission to write a repository_dispatch requests

    steps:
    - name: Fetch PR details based on branch name
      env:
        GH_TOKEN: ${{ github.token }} # Expose the token for GH CLI
      run: |
        BRANCH_NAME="eXorus-patch-10"  # Remplacez par le nom de la branche de votre PR
        REPO="${{ github.repository }}"
        OWNER="${{ github.repository_owner }}"
        
        # Fetch the list of PRs for the branch using gh api
        PR_DETAILS=$(gh api -H "Accept: application/vnd.github+json" \
        "/repos/$OWNER/$REPO/pulls?head=$OWNER:$BRANCH_NAME")

        # Get the SHA of the first PR (if exists)
        SHA=$(echo "$PR_DETAILS" | jq -r '.[0].head.sha')

        # Check if a SHA was found
        if [ "$SHA" != "null" ]; then
          echo "The SHA of the PR is $SHA"
          # You can now use the SHA in further steps or API calls
        else
          echo "No PR found for branch $BRANCH_NAME"
          exit 1
        fi

    
    - name: Create Check
      if: success()
      env:
        GH_TOKEN: ${{ github.token }} # Expose the token for GH CLI
      run: |
        ##########################################################
        # Create a Check Run and indicate that it is being queued
        # Use --jq to return the ID
        ##########################################################

        CHECKID=$(gh api -X POST -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -f name='WAT' \
          -f head_sha='$SHA' \
          --jq '.id' \
          /repos/${{ github.repository }}/check-runs)
        
        ####################################################
        # Put the ID into a step variable
        ####################################################
          echo $CHECKID       

