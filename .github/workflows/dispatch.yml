name: Repository Dispatch
on:
  repository_dispatch:
    types: [my-check]
jobs:
  myEvent:
    runs-on: ubuntu-latest
    steps:
      ####################################################
      # Update the status to show that the queued message
      # was received and is being processed
      ####################################################
      - name: Acknowledge Request
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api -X PATCH -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -f 'status=in_progress' \
            -f 'output[title]=' \
            -f 'output[summary]=A *fancy* summary' \
            -f 'output[images][][image_url]=https://www.kenmuse.com/favicon/apple-touch-icon.png' \
            -f 'output[images][][caption]=Sample from kenmuse.com' \
            -f 'output[images][][alt]=Logo for kenmuse.com' \
            /repos/${{ github.repository }}/check-runs/${{ github.event.client_payload.checkRunId }}          
      
      ####################################################
      # Actually, we'll just sleep to simulate some work
      ####################################################
      - name: Processing        
        run: sleep 10

      #####################################################
      # Send a final message to complete the run and
      # provide any final updates. Doing this one in JSON
      # to make it more readable. This approach can also
      # be used to get total control over the serialized
      # data types (for example, integers).
      #####################################################
      - name: Complete Check
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/check-runs/${{ github.event.client_payload.checkRunId }} \
            -d '{"name":"mighty_readme","started_at":"2018-05-04T01:14:52Z","status":"completed","conclusion":"success","completed_at":"2018-05-04T01:14:52Z","output":{"title":"Mighty Readme report","summary":"There are 0 failures, 2 warnings, and 1 notices.","text":"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.","annotations":[{"path":"README.md","annotation_level":"warning","title":"Spell Checker","message":"Check your spelling for '\''banaas'\''.","raw_details":"Do you mean '\''bananas'\'' or '\''banana'\''?","start_line":2,"end_line":2},{"path":"README.md","annotation_level":"warning","title":"Spell Checker","message":"Check your spelling for '\''aples'\''","raw_details":"Do you mean '\''apples'\'' or '\''Naples'\''","start_line":4,"end_line":4}],"images":[{"alt":"Super bananas","image_url":"http://example.com/images/42"}]}}'
            
             
